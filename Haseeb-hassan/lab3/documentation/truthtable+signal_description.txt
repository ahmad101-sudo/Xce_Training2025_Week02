---------------------------------------------------------------------------------------
Operation (Truth Table Style for Control Inputs)
| `rst_n` | `load` | `enable` | `up_down` | Action                                                        |
| ------- | ------ | -------- | --------- | ------------------------------------------------------------- |
| 0       | X      | X        | X         | Reset counter to `0`.                                         |
| 1       | 1      | X        | X         | Load `count <= load_value`.                                   |
| 1       | 0      | 1        | 1         | Count up (increment). If `count == max_count`, wrap to `0`.   |
| 1       | 0      | 1        | 0         | Count down (decrement). If `count == 0`, wrap to `max_count`. |
| 1       | 0      | 0        | X         | Hold previous `count`.                                        |

-------------------------------------------------------------------------------------------------------------
signal description
-----------------------------------------------------------------------------------------------------------
| Signal       | Dir. | Width | Description                                                |
| ------------ | ---- | ----- | ---------------------------------------------------------- |
| `clk`        | In   | 1     | System clock (positive edge triggered).                    |
| `rst_n`      | In   | 1     | Active-low asynchronous reset (resets counter to 0).       |
| `load`       | In   | 1     | Loads counter with `load_value` on next rising clock edge. |
| `enable`     | In   | 1     | Enables counting (otherwise holds current value).          |
| `up_down`    | In   | 1     | Direction control: `1` = count up, `0` = count down.       |
| `load_value` | In   | 8     | Data to load when `load=1`.                                |
| `max_count`  | In   | 8     | Programmable maximum count value (wrap limit).             |
| `count`      | Out  | 8     | Current counter value.                                     |
| `tc`         | Out  | 1     | Terminal count flag (`1` when count == max\_count).        |
| `zero`       | Out  | 1     | Zero detect flag (`1` when count == 0).                    |
----------------------------------------------------------------------------------------------------------------
block digram
-----------------------------------------------------------------------------------------------------------------
               +-------------------------+
  clk ────────▶|                         |
  rst_n ──────▶|     CONTROL & REG       |───▶ count[7:0]
  load  ──────▶|  - load comparator     |
  load_value ─▶|  - load mux            |
  enable ─────▶|  - enable gate         |
  up_down ────▶|  - direction control   |
               |  - count register (8b) |
               +-------------------------+
                       ▲      ▲
                       |      |
                       |      +──────────────┐
                       |                     |
                       |                 +---▼---+
                       |                 | Limits|
                       |                 | max   |
                       |                 | count |
                       |                 +-------+
                       |
               +---------------------+
               |   Output Logic      |
               |  tc <= (count==max) |
               |  zero <= (count==0) |
               +---------------------+
