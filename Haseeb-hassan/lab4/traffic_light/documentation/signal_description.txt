Signal descriptions (include every signal used)

Top-level I/O

	clk (1-bit input) — 1 Hz clock tick for timing.

	rst_n (1-bit input) — active-low reset, synchronously sampled for state updates (we used posedge sample with async clear).

	emergency (1-bit input) — immediate emergency override (active high).

	pedestrian_req (1-bit input) — request button from pedestrian.

	ns_lights (2-bit output) — North-South light encoding: 00=RED, 01=YELLOW, 10=GREEN.

	ew_lights (2-bit output) — East-West light encoding, same encoding.

	ped_walk (1-bit output) — pedestrian walk signal (active high).

	emergency_active (1-bit output) — indicates emergency-mode active.

Internal / helper signals

	current_state, next_state, prev_state (state_t) — FSM registers.

	timer_start (1-bit) — 1-cycle pulse to start a timer from the FSM.

	timer_load (8-bit) — seconds to load into the timer when starting.

	timer_done (1-bit) — timer indicates countdown complete.

	ped_pending (1-bit) — latched pedestrian request (set by input, cleared when served).

Timer module

	start (input) — one-cycle load pulse.

	load_value (input) — number of ticks the timer should count down.

	done (output) — true when timer finished counting (and not running).
--------------------------------------------------------------------------------------------
state table
------------------------------------------------------------------------------------------
State                      | Entry Action (timer_start/load) | Exit condition -> Next
--------------------------------------------------------------------------------------
STARTUP_FLASH              | timer_load=5, timer_start=1     | timer_done -> NS_GREEN_EW_RED
NS_GREEN_EW_RED            | timer_load=30, timer_start=1    | timer_done -> NS_YELLOW_EW_RED
NS_YELLOW_EW_RED           | timer_load=5, timer_start=1     | timer_done -> (ped_pending? PEDESTRIAN_CROSSING : NS_RED_EW_GREEN)
NS_RED_EW_GREEN            | timer_load=30, timer_start=1    | timer_done -> NS_RED_EW_YELLOW
NS_RED_EW_YELLOW           | timer_load=5, timer_start=1     | timer_done -> (ped_pending? PEDESTRIAN_CROSSING : NS_GREEN_EW_RED)
PEDESTRIAN_CROSSING        | timer_load=10, timer_start=1    | timer_done -> STARTUP_FLASH  (or resume)
EMERGENCY_ALL_RED          | none (immediate)                | emergency==0 -> STARTUP_FLASH
